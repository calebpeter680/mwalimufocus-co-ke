from celery import shared_task
from django.core.mail import EmailMessage
from django.conf import settings
from django.shortcuts import get_object_or_404
import requests
import filetype
from validate_email_address import validate_email

from .models import Order, Brand


@shared_task
def send_email_with_attachments_task(order_id):
    order = get_object_or_404(Order, pk=order_id)

    if order.attachments_sent:
        return {'success': True}

    order_items = order.items.all()
    brand = Brand.objects.last()
    attachments = []

    for item in order.items.all():
        attachment_url = f"https://mwalimufocus.nyc3.digitaloceanspaces.com/mwalimufocus/shopitemfiles/{item.file.name}"
        try:
            response = requests.get(attachment_url)
            if response.ok:
                content = response.content
                mime_type = filetype.guess(content)
                if mime_type is not None:
                    content_type = mime_type.mime
                    attachments.append((item.file.name, content, content_type))
                else:
                    print(f"Failed to determine file type for {attachment_url}")
            else:
                print(f"Failed to fetch file from {attachment_url}: HTTP {response.status_code}")
        except Exception as e:
            print(f"Error attaching file {attachment_url}: {e}")

    subject = 'Your Order Attachments'
    message_lines = []

    message_lines.append(f"Thank you for paying for Order #{order.display_order_number}")

    if order.user and order.user.is_new:
        message_lines.append("If you want to achieve UNLIMITED downloads, login to your account using:")
        message_lines.append(f"Email: {order.user.email}")
        generated_password = order.user.phone_number
        message_lines.append(f"Password: {generated_password}")
        message_lines.append(f"IMPORTANT: Since this password was generated by our system, we encourage you to login to your account and change it. Step 1: Click on My Account and login using the provided password. Step 2: Click on your profile and change the password.")

    message_lines.append(f"\nPlease confirm if all the attachments are available. If any are missing, please contact support. Our email is {brand.email} and our phone number is {brand.phone_number}.")

    plain_message = "\n\n".join(message_lines)

    from_email = settings.DEFAULT_FROM_EMAIL
    to_email = order.user.email

    email = EmailMessage(subject, plain_message, from_email, [to_email])

    for filename, content, content_type in attachments:
        email.attach(filename, content, content_type)

    try:
        email.send()

        order.attachments_sent = True
        order.save()

        order.user.is_new = False
        order.user.save()

        return {'success': True}
    except Exception as e:
        return {'success': False, 'error_message': str(e)}







@shared_task
def send_attachments_for_paid_orders():
    paid_orders = Order.objects.filter(is_paid=True, attachments_sent=False)

    for order in paid_orders:
        attachments = []

        for item in order.items.all():
            attachment_url = f"https://mwalimufocus.nyc3.digitaloceanspaces.com/mwalimufocus/shopitemfiles/{item.file.name}"
            try:
                response = requests.get(attachment_url)
                if response.ok:
                    content = response.content
                    mime_type = filetype.guess(content)
                    if mime_type is not None:
                        content_type = mime_type.mime
                        attachments.append((item.file.name, content, content_type))
                    else:
                        print(f"Failed to determine file type for {attachment_url}")
                else:
                    print(f"Failed to fetch file from {attachment_url}: HTTP {response.status_code}")
            except Exception as e:
                print(f"Error attaching file {attachment_url}: {e}")

        subject = 'Your Order Attachments'
        message_lines = [
            f"Thank you for paying for Order #{order.display_order_number}"
        ]

        if order.user and order.user.is_new:
            message_lines.extend([
                "If you want to achieve UNLIMITED downloads, login to your account using:",
                f"Email: {order.user.email}",
                f"Password: {order.user.phone_number}",
                "IMPORTANT: Since this password was generated by our system, we encourage you to login to your account and change it. Step 1: Click on My Account and login using the provided password. Step 2: Click on your profile and change the password."
            ])

        brand = Brand.objects.last()  
        message_lines.append(
            f"\nPlease confirm if all the attachments are available. If any are missing, please contact support. Our email is {brand.email} and our phone number is {brand.phone_number}."
        )

        plain_message = "\n\n".join(message_lines)

        from_email = settings.DEFAULT_FROM_EMAIL
        to_email = order.user.email

        if not validate_email(to_email):
            print(f"Invalid email address detected: {to_email}")
            continue  

        email = EmailMessage(subject, plain_message, from_email, [to_email])

        for filename, content, content_type in attachments:
            email.attach(filename, content, content_type)

        try:
            email.send()

            order.attachments_sent = True
            order.save()

            if order.user:
                order.user.is_new = False 
                order.user.save()

            print(f"Attachments sent for Order {order.display_order_number}")
        except Exception as e:
            print(f"Failed to send attachments for Order {order.display_order_number}: {e}")

